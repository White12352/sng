name: Prerelease
on:
  workflow_dispatch:
  push:
    branches:
      - dev-next
      - debug
jobs:
  Build:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - { type: "WithoutCGO", target: "linux-amd64", id: "1" }
          - { type: "WithoutCGO", target: "linux-arm64", id: "2" }
          - { type: "WithoutCGO", target: "windows-amd64", id: "3" }
          - { type: "WithoutCGO", target: "darwin-amd64 darwin-arm64", id: "4" }
          - { type: "WithCGO", target: "windows/*", id: "1" }
          - { type: "WithCGO", target: "linux/386,linux/amd64", id: "2" }
          - { type: "WithCGO", target: "linux/arm64,linux/riscv64", id: "3" }
          - { type: "WithCGO", target: "linux/arm,linux/arm-6,linux/arm-7", id: "4" }
          - { type: "WithCGO", target: "linux/mips,linux/mipsle", id: "5" }
          - { type: "WithCGO", target: "linux/mips64,linux/mips64le", id: "6" }
          - { type: "WithCGO", target: "darwin-10.16/*", id: "7" }
          - { type: "WithCGO", target: "android-arm64", id: "8" }

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set ENV
        run: |
          echo "NAME=sing-box" >> $GITHUB_ENV
          echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
          echo "ShortSHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV
        shell: bash

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true

      - name: Test
        if: ${{ github.ref_name=='debug' && matrix.job.id=='1' && matrix.job.type=='WithoutCGO' }}
        run: |
          go test ./...

      - name: Build WithoutCGO
        if: ${{ matrix.job.type=='WithoutCGO' }}
        env:
          NAME: sing-box
          TAGS: with_gvisor
          #MAIN: ./cmd/sing-box
        run: make -j$(($(nproc) + 1)) ${{ matrix.job.target }}

      - uses: nttld/setup-ndk@v1
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target=='android-arm64' }}
        id: setup-ndk
        with:
          ndk-version: r25b
          add-to-path: false
          local-cache: true

      - name: Build Android
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target=='android-arm64' }}
        env:
          #ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          TAGS: with_gvisor,with_quic,with_wireguard,with_grpc,with_ech,with_utls,with_shadowsocksr
          MAIN: ./cmd/sing-box
          CGO_ENABLED: 1
          CC: ${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android33-clang
          GOARCH: arm64
          GOOS: android
          DIST: ./dist
        run: |
          mkdir dist
          CGO_ENABLED=$(CGO_ENABLED) CC=$(CC) GOOS=$(GOOS) GOARCH=$(GOARCH) go build -v -trimpath -tags "$(TAGS)" -ldflags "-s -w -buildid=" -o dist/sing-box-android-arm64 ./cmd/sing-box
          
      - name: Set up xgo
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target!='android-arm64' }}
        run: |
          docker pull techknowlogick/xgo:latest
          go install src.techknowlogick.com/xgo@latest

      - name: Build by xgo
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target!='android-arm64' }}
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          TAGS: with_gvisor,with_quic,with_wireguard,with_grpc,with_ech,with_utls,with_shadowsocksr
          MAIN: ./cmd/sing-box
        run: |
          mkdir dist
          xgo --branch ${{ github.ref_name }} --targets="${{ matrix.job.target }}" --tags="${TAGS}" -ldflags="-s -w -buildid=" --out dist/${NAME} github.com/${{ github.repository }} --pkg cmd/sing-box

      - uses: actions/upload-artifact@v3
        if: ${{  success() }}
        with:
          name: artifact
          path: /home/runner/work/sng/sng/*

  Build2:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - { type: "WithCGO", target: "android-armv7", id: "1" }

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set ENV
        run: |
          echo "NAME=sing-box" >> $GITHUB_ENV
          echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
          echo "ShortSHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV
        shell: bash

      - name: Set ENV
        run: |
          echo "TAGS=with_gvisor,with_quic,with_wireguard,with_grpc,with_ech,with_utls,with_shadowsocksr" >> $GITHUB_ENV
          echo "MAIN=./cmd/sing-box" >> $GITHUB_ENV
        shell: bash

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true

      - name: Test
        if: ${{ github.ref_name=='Beta' && matrix.job.id=='1' && matrix.job.type=='WithoutCGO' }}
        run: |
          go test ./...

      - name: Build WithoutCGO
        if: ${{ matrix.job.type=='WithoutCGO' }}
        env:
          NAME: sing-box
          BINDIR: bin
        run: make -j$(($(nproc) + 1)) ${{ matrix.job.target }}

      - uses: nttld/setup-ndk@v1
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target=='android-armv7' }}
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: false
          local-cache: true

      - name: Build Android
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target=='android-armv7' }}
        env:
          #ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          TAGS: with_gvisor,with_quic,with_wireguard,with_grpc,with_ech,with_utls,with_shadowsocksr
          MAIN: ./cmd/sing-box
          CGO_ENABLED: 1
          CC: ${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang
          GOARCH: arm
          GOOS: android
          GOARM: 7
        run: |
          mkdir dist
          CGO_ENABLED=$(CGO_ENABLED) CC=$(CC) GOOS=$(GOOS) GOARCH=$(GOARCH) GOARM=$(GOARM) go build -v -trimpath -tags "$(TAGS)" -ldflags "-s -w -buildid=" -o dist/sing-box-android-armv7 ./cmd/sing-box
        
      - name: Set up xgo
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target!='android-armv7' }}
        run: |
          docker pull techknowlogick/xgo:latest
          go install src.techknowlogick.com/xgo@latest

      - name: Build by xgo
        if: ${{ matrix.job.type=='WithCGO' && matrix.job.target!='android-armv7' }}
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          xgo --branch ${{ github.ref_name }} --targets="${{ matrix.job.target }}" -v -trimpath -tags "$(TAGS)" -ldflags "-s -w -buildid=" "${MAIN}" --out bin/${NAME} github.com/${{ github.repository }}

      - uses: actions/upload-artifact@v3
        if: ${{  success() }}
        with:
          name: artifact
          path: /home/runner/work/sng/sng/*

  Upload:
    permissions: write-all
    needs: [ Build, Build2 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: /home/runner/work/sng/sng/*
